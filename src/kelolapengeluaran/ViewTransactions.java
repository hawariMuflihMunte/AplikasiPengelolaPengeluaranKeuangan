package kelolapengeluaran;

import java.sql.SQLException;
import java.text.NumberFormat;
import java.util.List;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import kelolapengeluaran.config.Config;
import kelolapengeluaran.dao.TransaksiPengeluaranDAO;
import kelolapengeluaran.model.TransaksiPengeluaran;

/**
 *
 * @author Lenovo
 */
public class ViewTransactions extends javax.swing.JFrame {
    private TransaksiPengeluaranDAO transaksiPengeluaranDAO;
    private int selectedTransactionId;
    
    /**
     * Creates new form ViewTransactions
     */
    public ViewTransactions() {
        initComponents();
        try {
            transaksiPengeluaranDAO = new TransaksiPengeluaranDAO(Config.configDB());
            populateTable("Semua");
            populateDateComboBox();
        } catch (SQLException ex) {
            Logger.getLogger(ViewTransactions.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void populateTable(String selectedDate) throws SQLException {
        DefaultTableModel model = new DefaultTableModel();
        model = (DefaultTableModel) TableTransactions.getModel();
        model.setRowCount(0);

        List<TransaksiPengeluaran> transactions;
        if (selectedDate.equals("Semua")) {
            transactions = transaksiPengeluaranDAO.getAllTransactions();
        } else {
            transactions = transaksiPengeluaranDAO.getTransactionsByDate(selectedDate);
        }
        
        int counter = 1;
        NumberFormat currencyFormat = NumberFormat.getCurrencyInstance(new Locale("id", "ID"));

        for (TransaksiPengeluaran transaction : transactions) {
            Object[] row = {
                counter++,
                transaction.getId_transaksi(),
                transaction.getTanggal_transaksi(),
                currencyFormat.format(transaction.getJumlah_pengeluaran()),
                transaksiPengeluaranDAO.getCategoryById(transaction.getId_kategori()),
                transaction.getDeskripsi_transaksi()
            };
            model.addRow(row);
        }
    }
    
    private void populateDateComboBox() {
        ComboBoxDate.addItem("Semua");
        
        try {
            List<String> uniqueDates = transaksiPengeluaranDAO.getUniqueTransactionDates();
            uniqueDates.forEach((date) -> {
                ComboBoxDate.addItem(date);
            });
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        LabelTitle = new javax.swing.JLabel();
        ButtonTambah = new javax.swing.JButton();
        ButtonKembali = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        TableTransactions = new javax.swing.JTable();
        LabelTransactions = new javax.swing.JLabel();
        ButtonHapus = new javax.swing.JButton();
        ComboBoxDate = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        LabelTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        LabelTitle.setText("TRANSAKSI PENGELUARAN");

        ButtonTambah.setBackground(new java.awt.Color(102, 102, 255));
        ButtonTambah.setForeground(new java.awt.Color(255, 255, 255));
        ButtonTambah.setText("Tambah");
        ButtonTambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonTambahActionPerformed(evt);
            }
        });

        ButtonKembali.setBackground(new java.awt.Color(153, 153, 153));
        ButtonKembali.setText("Kembali");
        ButtonKembali.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonKembaliActionPerformed(evt);
            }
        });

        TableTransactions.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "#", "ID", "Tanggal", "Jumlah", "Kategori", "Deskripsi"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(TableTransactions);
        if (TableTransactions.getColumnModel().getColumnCount() > 0) {
            TableTransactions.getColumnModel().getColumn(0).setResizable(false);
            TableTransactions.getColumnModel().getColumn(0).setPreferredWidth(30);
            TableTransactions.getColumnModel().getColumn(1).setResizable(false);
            TableTransactions.getColumnModel().getColumn(1).setPreferredWidth(30);
            TableTransactions.getColumnModel().getColumn(2).setResizable(false);
            TableTransactions.getColumnModel().getColumn(3).setResizable(false);
            TableTransactions.getColumnModel().getColumn(4).setResizable(false);
            TableTransactions.getColumnModel().getColumn(5).setResizable(false);
        }

        LabelTransactions.setText("Daftar Transaksi");

        ButtonHapus.setBackground(new java.awt.Color(255, 102, 102));
        ButtonHapus.setForeground(new java.awt.Color(255, 255, 255));
        ButtonHapus.setText("Hapus");
        ButtonHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonHapusActionPerformed(evt);
            }
        });

        ComboBoxDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboBoxDateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ComboBoxDate, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(LabelTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1)
                    .addComponent(ButtonKembali, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(LabelTransactions, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(ButtonTambah, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(ButtonHapus, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(LabelTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(ButtonTambah, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ButtonHapus, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(ComboBoxDate, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(LabelTransactions)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(ButtonKembali, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ButtonTambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonTambahActionPerformed
        new AddTransaction().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_ButtonTambahActionPerformed

    private void ButtonKembaliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonKembaliActionPerformed
        new Main().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_ButtonKembaliActionPerformed

    private void ButtonHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonHapusActionPerformed
        int selectedRow = TableTransactions.getSelectedRow();
        if (selectedRow != -1) {
            this.selectedTransactionId = (int)TableTransactions.getValueAt(selectedRow, 1);
            
            int option = JOptionPane.showConfirmDialog(this, "Yakin ingin menghapus data transaksi?", "Konfirmasi Penghapusan", JOptionPane.YES_NO_OPTION);
            if (option == JOptionPane.YES_OPTION) {
                transaksiPengeluaranDAO.deleteTransaction(selectedTransactionId);
                try {
                    populateTable("Semua");
                } catch (SQLException ex) {
                    Logger.getLogger(ViewTransactions.class.getName()).log(Level.SEVERE, null, ex);
                }
                JOptionPane.showMessageDialog(this, "Data transaksi berhasil dihapus");
            } 
        } else {
            JOptionPane.showMessageDialog(this, "Pilih transaksi terlebih dahulu", "Warning", JOptionPane.WARNING_MESSAGE);
        }   
    }//GEN-LAST:event_ButtonHapusActionPerformed

    private void ComboBoxDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboBoxDateActionPerformed
        String selectedDate = ComboBoxDate.getSelectedItem().toString();
        try {
            populateTable(selectedDate);
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_ComboBoxDateActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewTransactions.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewTransactions.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewTransactions.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewTransactions.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ViewTransactions().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ButtonHapus;
    private javax.swing.JButton ButtonKembali;
    private javax.swing.JButton ButtonTambah;
    private javax.swing.JComboBox<String> ComboBoxDate;
    private javax.swing.JLabel LabelTitle;
    private javax.swing.JLabel LabelTransactions;
    private javax.swing.JTable TableTransactions;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
